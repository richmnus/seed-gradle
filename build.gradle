apply plugin: 'java'
apply plugin: 'java-library' // Works with Java plugin, this app can be a library that exports an API
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.7.9"
    reportsDir = file("$buildDir/reports/jacoco")
}

jacocoTestReport {
    additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/reports/jacoco"
    }
    executionData = files("${buildDir}/jacoco/test.exec")
}

sourceCompatibility = 1.8
version = '1.0'
jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart',
                   'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // java-library plugin: exported to consumers, i.e. found on their compile classpath
    api 'org.apache.commons:commons-collections4:4.1'

    // java-library plugin: used internally, not exposed to consumers on their own compile classpath
    implementation 'com.google.code.findbugs:findbugs-annotations:3.0.1'

    // java and java-library plugins
    testImplementation 'junit:junit:4.12'
}

test {
    systemProperties 'property': 'value'
}

test {
    finalizedBy jacocoTestReport
    jacoco {
        append = false
        destinationFile = file("$buildDir/jacoco/test.exec")
        // classDumpFile = file("$buildDir/jacoco/classpathdumps")
    }
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}
